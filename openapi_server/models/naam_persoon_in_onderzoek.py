from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.abstract_datum import AbstractDatum
from openapi_server import util

from openapi_server.models.abstract_datum import AbstractDatum  # noqa: E501

class NaamPersoonInOnderzoek(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, datum_ingang_onderzoek=None, voornamen=None, adellijke_titel_predicaat=None, voorvoegsel=None, geslachtsnaam=None, voorletters=None, aanduiding_naamgebruik=None, volledige_naam=None):  # noqa: E501
        """NaamPersoonInOnderzoek - a model defined in OpenAPI

        :param datum_ingang_onderzoek: The datum_ingang_onderzoek of this NaamPersoonInOnderzoek.  # noqa: E501
        :type datum_ingang_onderzoek: AbstractDatum
        :param voornamen: The voornamen of this NaamPersoonInOnderzoek.  # noqa: E501
        :type voornamen: bool
        :param adellijke_titel_predicaat: The adellijke_titel_predicaat of this NaamPersoonInOnderzoek.  # noqa: E501
        :type adellijke_titel_predicaat: bool
        :param voorvoegsel: The voorvoegsel of this NaamPersoonInOnderzoek.  # noqa: E501
        :type voorvoegsel: bool
        :param geslachtsnaam: The geslachtsnaam of this NaamPersoonInOnderzoek.  # noqa: E501
        :type geslachtsnaam: bool
        :param voorletters: The voorletters of this NaamPersoonInOnderzoek.  # noqa: E501
        :type voorletters: bool
        :param aanduiding_naamgebruik: The aanduiding_naamgebruik of this NaamPersoonInOnderzoek.  # noqa: E501
        :type aanduiding_naamgebruik: bool
        :param volledige_naam: The volledige_naam of this NaamPersoonInOnderzoek.  # noqa: E501
        :type volledige_naam: bool
        """
        self.openapi_types = {
            'datum_ingang_onderzoek': AbstractDatum,
            'voornamen': bool,
            'adellijke_titel_predicaat': bool,
            'voorvoegsel': bool,
            'geslachtsnaam': bool,
            'voorletters': bool,
            'aanduiding_naamgebruik': bool,
            'volledige_naam': bool
        }

        self.attribute_map = {
            'datum_ingang_onderzoek': 'datumIngangOnderzoek',
            'voornamen': 'voornamen',
            'adellijke_titel_predicaat': 'adellijkeTitelPredicaat',
            'voorvoegsel': 'voorvoegsel',
            'geslachtsnaam': 'geslachtsnaam',
            'voorletters': 'voorletters',
            'aanduiding_naamgebruik': 'aanduidingNaamgebruik',
            'volledige_naam': 'volledigeNaam'
        }

        self._datum_ingang_onderzoek = datum_ingang_onderzoek
        self._voornamen = voornamen
        self._adellijke_titel_predicaat = adellijke_titel_predicaat
        self._voorvoegsel = voorvoegsel
        self._geslachtsnaam = geslachtsnaam
        self._voorletters = voorletters
        self._aanduiding_naamgebruik = aanduiding_naamgebruik
        self._volledige_naam = volledige_naam

    @classmethod
    def from_dict(cls, dikt) -> 'NaamPersoonInOnderzoek':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NaamPersoonInOnderzoek of this NaamPersoonInOnderzoek.  # noqa: E501
        :rtype: NaamPersoonInOnderzoek
        """
        return util.deserialize_model(dikt, cls)

    @property
    def datum_ingang_onderzoek(self) -> AbstractDatum:
        """Gets the datum_ingang_onderzoek of this NaamPersoonInOnderzoek.


        :return: The datum_ingang_onderzoek of this NaamPersoonInOnderzoek.
        :rtype: AbstractDatum
        """
        return self._datum_ingang_onderzoek

    @datum_ingang_onderzoek.setter
    def datum_ingang_onderzoek(self, datum_ingang_onderzoek: AbstractDatum):
        """Sets the datum_ingang_onderzoek of this NaamPersoonInOnderzoek.


        :param datum_ingang_onderzoek: The datum_ingang_onderzoek of this NaamPersoonInOnderzoek.
        :type datum_ingang_onderzoek: AbstractDatum
        """

        self._datum_ingang_onderzoek = datum_ingang_onderzoek

    @property
    def voornamen(self) -> bool:
        """Gets the voornamen of this NaamPersoonInOnderzoek.


        :return: The voornamen of this NaamPersoonInOnderzoek.
        :rtype: bool
        """
        return self._voornamen

    @voornamen.setter
    def voornamen(self, voornamen: bool):
        """Sets the voornamen of this NaamPersoonInOnderzoek.


        :param voornamen: The voornamen of this NaamPersoonInOnderzoek.
        :type voornamen: bool
        """

        self._voornamen = voornamen

    @property
    def adellijke_titel_predicaat(self) -> bool:
        """Gets the adellijke_titel_predicaat of this NaamPersoonInOnderzoek.


        :return: The adellijke_titel_predicaat of this NaamPersoonInOnderzoek.
        :rtype: bool
        """
        return self._adellijke_titel_predicaat

    @adellijke_titel_predicaat.setter
    def adellijke_titel_predicaat(self, adellijke_titel_predicaat: bool):
        """Sets the adellijke_titel_predicaat of this NaamPersoonInOnderzoek.


        :param adellijke_titel_predicaat: The adellijke_titel_predicaat of this NaamPersoonInOnderzoek.
        :type adellijke_titel_predicaat: bool
        """

        self._adellijke_titel_predicaat = adellijke_titel_predicaat

    @property
    def voorvoegsel(self) -> bool:
        """Gets the voorvoegsel of this NaamPersoonInOnderzoek.


        :return: The voorvoegsel of this NaamPersoonInOnderzoek.
        :rtype: bool
        """
        return self._voorvoegsel

    @voorvoegsel.setter
    def voorvoegsel(self, voorvoegsel: bool):
        """Sets the voorvoegsel of this NaamPersoonInOnderzoek.


        :param voorvoegsel: The voorvoegsel of this NaamPersoonInOnderzoek.
        :type voorvoegsel: bool
        """

        self._voorvoegsel = voorvoegsel

    @property
    def geslachtsnaam(self) -> bool:
        """Gets the geslachtsnaam of this NaamPersoonInOnderzoek.


        :return: The geslachtsnaam of this NaamPersoonInOnderzoek.
        :rtype: bool
        """
        return self._geslachtsnaam

    @geslachtsnaam.setter
    def geslachtsnaam(self, geslachtsnaam: bool):
        """Sets the geslachtsnaam of this NaamPersoonInOnderzoek.


        :param geslachtsnaam: The geslachtsnaam of this NaamPersoonInOnderzoek.
        :type geslachtsnaam: bool
        """

        self._geslachtsnaam = geslachtsnaam

    @property
    def voorletters(self) -> bool:
        """Gets the voorletters of this NaamPersoonInOnderzoek.


        :return: The voorletters of this NaamPersoonInOnderzoek.
        :rtype: bool
        """
        return self._voorletters

    @voorletters.setter
    def voorletters(self, voorletters: bool):
        """Sets the voorletters of this NaamPersoonInOnderzoek.


        :param voorletters: The voorletters of this NaamPersoonInOnderzoek.
        :type voorletters: bool
        """

        self._voorletters = voorletters

    @property
    def aanduiding_naamgebruik(self) -> bool:
        """Gets the aanduiding_naamgebruik of this NaamPersoonInOnderzoek.


        :return: The aanduiding_naamgebruik of this NaamPersoonInOnderzoek.
        :rtype: bool
        """
        return self._aanduiding_naamgebruik

    @aanduiding_naamgebruik.setter
    def aanduiding_naamgebruik(self, aanduiding_naamgebruik: bool):
        """Sets the aanduiding_naamgebruik of this NaamPersoonInOnderzoek.


        :param aanduiding_naamgebruik: The aanduiding_naamgebruik of this NaamPersoonInOnderzoek.
        :type aanduiding_naamgebruik: bool
        """

        self._aanduiding_naamgebruik = aanduiding_naamgebruik

    @property
    def volledige_naam(self) -> bool:
        """Gets the volledige_naam of this NaamPersoonInOnderzoek.


        :return: The volledige_naam of this NaamPersoonInOnderzoek.
        :rtype: bool
        """
        return self._volledige_naam

    @volledige_naam.setter
    def volledige_naam(self, volledige_naam: bool):
        """Sets the volledige_naam of this NaamPersoonInOnderzoek.


        :param volledige_naam: The volledige_naam of this NaamPersoonInOnderzoek.
        :type volledige_naam: bool
        """

        self._volledige_naam = volledige_naam
