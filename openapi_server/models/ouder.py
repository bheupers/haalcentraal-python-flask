from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.abstract_datum import AbstractDatum
from openapi_server.models.geboorte import Geboorte
from openapi_server.models.naam_gerelateerde import NaamGerelateerde
from openapi_server.models.ouder_in_onderzoek import OuderInOnderzoek
from openapi_server.models.waardetabel import Waardetabel
import re
from openapi_server import util

from openapi_server.models.abstract_datum import AbstractDatum  # noqa: E501
from openapi_server.models.geboorte import Geboorte  # noqa: E501
from openapi_server.models.naam_gerelateerde import NaamGerelateerde  # noqa: E501
from openapi_server.models.ouder_in_onderzoek import OuderInOnderzoek  # noqa: E501
from openapi_server.models.waardetabel import Waardetabel  # noqa: E501
import re  # noqa: E501

class Ouder(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, burgerservicenummer=None, geslacht=None, ouder_aanduiding=None, datum_ingang_familierechtelijke_betrekking=None, naam=None, in_onderzoek=None, geboorte=None):  # noqa: E501
        """Ouder - a model defined in OpenAPI

        :param burgerservicenummer: The burgerservicenummer of this Ouder.  # noqa: E501
        :type burgerservicenummer: str
        :param geslacht: The geslacht of this Ouder.  # noqa: E501
        :type geslacht: Waardetabel
        :param ouder_aanduiding: The ouder_aanduiding of this Ouder.  # noqa: E501
        :type ouder_aanduiding: str
        :param datum_ingang_familierechtelijke_betrekking: The datum_ingang_familierechtelijke_betrekking of this Ouder.  # noqa: E501
        :type datum_ingang_familierechtelijke_betrekking: AbstractDatum
        :param naam: The naam of this Ouder.  # noqa: E501
        :type naam: NaamGerelateerde
        :param in_onderzoek: The in_onderzoek of this Ouder.  # noqa: E501
        :type in_onderzoek: OuderInOnderzoek
        :param geboorte: The geboorte of this Ouder.  # noqa: E501
        :type geboorte: Geboorte
        """
        self.openapi_types = {
            'burgerservicenummer': str,
            'geslacht': Waardetabel,
            'ouder_aanduiding': str,
            'datum_ingang_familierechtelijke_betrekking': AbstractDatum,
            'naam': NaamGerelateerde,
            'in_onderzoek': OuderInOnderzoek,
            'geboorte': Geboorte
        }

        self.attribute_map = {
            'burgerservicenummer': 'burgerservicenummer',
            'geslacht': 'geslacht',
            'ouder_aanduiding': 'ouderAanduiding',
            'datum_ingang_familierechtelijke_betrekking': 'datumIngangFamilierechtelijkeBetrekking',
            'naam': 'naam',
            'in_onderzoek': 'inOnderzoek',
            'geboorte': 'geboorte'
        }

        self._burgerservicenummer = burgerservicenummer
        self._geslacht = geslacht
        self._ouder_aanduiding = ouder_aanduiding
        self._datum_ingang_familierechtelijke_betrekking = datum_ingang_familierechtelijke_betrekking
        self._naam = naam
        self._in_onderzoek = in_onderzoek
        self._geboorte = geboorte

    @classmethod
    def from_dict(cls, dikt) -> 'Ouder':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Ouder of this Ouder.  # noqa: E501
        :rtype: Ouder
        """
        return util.deserialize_model(dikt, cls)

    @property
    def burgerservicenummer(self) -> str:
        """Gets the burgerservicenummer of this Ouder.


        :return: The burgerservicenummer of this Ouder.
        :rtype: str
        """
        return self._burgerservicenummer

    @burgerservicenummer.setter
    def burgerservicenummer(self, burgerservicenummer: str):
        """Sets the burgerservicenummer of this Ouder.


        :param burgerservicenummer: The burgerservicenummer of this Ouder.
        :type burgerservicenummer: str
        """
        if burgerservicenummer is not None and not re.search(r'^[0-9]{9}$', burgerservicenummer):  # noqa: E501
            raise ValueError(r"Invalid value for `burgerservicenummer`, must be a follow pattern or equal to `/^[0-9]{9}$/`")  # noqa: E501

        self._burgerservicenummer = burgerservicenummer

    @property
    def geslacht(self) -> Waardetabel:
        """Gets the geslacht of this Ouder.


        :return: The geslacht of this Ouder.
        :rtype: Waardetabel
        """
        return self._geslacht

    @geslacht.setter
    def geslacht(self, geslacht: Waardetabel):
        """Sets the geslacht of this Ouder.


        :param geslacht: The geslacht of this Ouder.
        :type geslacht: Waardetabel
        """

        self._geslacht = geslacht

    @property
    def ouder_aanduiding(self) -> str:
        """Gets the ouder_aanduiding of this Ouder.


        :return: The ouder_aanduiding of this Ouder.
        :rtype: str
        """
        return self._ouder_aanduiding

    @ouder_aanduiding.setter
    def ouder_aanduiding(self, ouder_aanduiding: str):
        """Sets the ouder_aanduiding of this Ouder.


        :param ouder_aanduiding: The ouder_aanduiding of this Ouder.
        :type ouder_aanduiding: str
        """
        if ouder_aanduiding is not None and not re.search(r'^[1|2]$', ouder_aanduiding):  # noqa: E501
            raise ValueError(r"Invalid value for `ouder_aanduiding`, must be a follow pattern or equal to `/^[1|2]$/`")  # noqa: E501

        self._ouder_aanduiding = ouder_aanduiding

    @property
    def datum_ingang_familierechtelijke_betrekking(self) -> AbstractDatum:
        """Gets the datum_ingang_familierechtelijke_betrekking of this Ouder.


        :return: The datum_ingang_familierechtelijke_betrekking of this Ouder.
        :rtype: AbstractDatum
        """
        return self._datum_ingang_familierechtelijke_betrekking

    @datum_ingang_familierechtelijke_betrekking.setter
    def datum_ingang_familierechtelijke_betrekking(self, datum_ingang_familierechtelijke_betrekking: AbstractDatum):
        """Sets the datum_ingang_familierechtelijke_betrekking of this Ouder.


        :param datum_ingang_familierechtelijke_betrekking: The datum_ingang_familierechtelijke_betrekking of this Ouder.
        :type datum_ingang_familierechtelijke_betrekking: AbstractDatum
        """

        self._datum_ingang_familierechtelijke_betrekking = datum_ingang_familierechtelijke_betrekking

    @property
    def naam(self) -> NaamGerelateerde:
        """Gets the naam of this Ouder.


        :return: The naam of this Ouder.
        :rtype: NaamGerelateerde
        """
        return self._naam

    @naam.setter
    def naam(self, naam: NaamGerelateerde):
        """Sets the naam of this Ouder.


        :param naam: The naam of this Ouder.
        :type naam: NaamGerelateerde
        """

        self._naam = naam

    @property
    def in_onderzoek(self) -> OuderInOnderzoek:
        """Gets the in_onderzoek of this Ouder.


        :return: The in_onderzoek of this Ouder.
        :rtype: OuderInOnderzoek
        """
        return self._in_onderzoek

    @in_onderzoek.setter
    def in_onderzoek(self, in_onderzoek: OuderInOnderzoek):
        """Sets the in_onderzoek of this Ouder.


        :param in_onderzoek: The in_onderzoek of this Ouder.
        :type in_onderzoek: OuderInOnderzoek
        """

        self._in_onderzoek = in_onderzoek

    @property
    def geboorte(self) -> Geboorte:
        """Gets the geboorte of this Ouder.


        :return: The geboorte of this Ouder.
        :rtype: Geboorte
        """
        return self._geboorte

    @geboorte.setter
    def geboorte(self, geboorte: Geboorte):
        """Sets the geboorte of this Ouder.


        :param geboorte: The geboorte of this Ouder.
        :type geboorte: Geboorte
        """

        self._geboorte = geboorte
