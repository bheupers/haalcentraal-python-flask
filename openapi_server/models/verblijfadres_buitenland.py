from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.verblijfadres_buitenland_in_onderzoek import VerblijfadresBuitenlandInOnderzoek
from openapi_server.models.waardetabel import Waardetabel
from openapi_server import util

from openapi_server.models.verblijfadres_buitenland_in_onderzoek import VerblijfadresBuitenlandInOnderzoek  # noqa: E501
from openapi_server.models.waardetabel import Waardetabel  # noqa: E501

class VerblijfadresBuitenland(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, regel1=None, regel2=None, regel3=None, land=None, in_onderzoek=None):  # noqa: E501
        """VerblijfadresBuitenland - a model defined in OpenAPI

        :param regel1: The regel1 of this VerblijfadresBuitenland.  # noqa: E501
        :type regel1: str
        :param regel2: The regel2 of this VerblijfadresBuitenland.  # noqa: E501
        :type regel2: str
        :param regel3: The regel3 of this VerblijfadresBuitenland.  # noqa: E501
        :type regel3: str
        :param land: The land of this VerblijfadresBuitenland.  # noqa: E501
        :type land: Waardetabel
        :param in_onderzoek: The in_onderzoek of this VerblijfadresBuitenland.  # noqa: E501
        :type in_onderzoek: VerblijfadresBuitenlandInOnderzoek
        """
        self.openapi_types = {
            'regel1': str,
            'regel2': str,
            'regel3': str,
            'land': Waardetabel,
            'in_onderzoek': VerblijfadresBuitenlandInOnderzoek
        }

        self.attribute_map = {
            'regel1': 'regel1',
            'regel2': 'regel2',
            'regel3': 'regel3',
            'land': 'land',
            'in_onderzoek': 'inOnderzoek'
        }

        self._regel1 = regel1
        self._regel2 = regel2
        self._regel3 = regel3
        self._land = land
        self._in_onderzoek = in_onderzoek

    @classmethod
    def from_dict(cls, dikt) -> 'VerblijfadresBuitenland':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VerblijfadresBuitenland of this VerblijfadresBuitenland.  # noqa: E501
        :rtype: VerblijfadresBuitenland
        """
        return util.deserialize_model(dikt, cls)

    @property
    def regel1(self) -> str:
        """Gets the regel1 of this VerblijfadresBuitenland.

        Het eerste deel van een buitenlands adres. Vaak is dit een combinatie van de straat en huisnummer.   # noqa: E501

        :return: The regel1 of this VerblijfadresBuitenland.
        :rtype: str
        """
        return self._regel1

    @regel1.setter
    def regel1(self, regel1: str):
        """Sets the regel1 of this VerblijfadresBuitenland.

        Het eerste deel van een buitenlands adres. Vaak is dit een combinatie van de straat en huisnummer.   # noqa: E501

        :param regel1: The regel1 of this VerblijfadresBuitenland.
        :type regel1: str
        """
        if regel1 is not None and len(regel1) > 40:
            raise ValueError("Invalid value for `regel1`, length must be less than or equal to `40`")  # noqa: E501

        self._regel1 = regel1

    @property
    def regel2(self) -> str:
        """Gets the regel2 of this VerblijfadresBuitenland.

        Het tweede deel van een buitenlands adres. Vaak is dit een combinatie van woonplaats eventueel in combinatie met de postcode.   # noqa: E501

        :return: The regel2 of this VerblijfadresBuitenland.
        :rtype: str
        """
        return self._regel2

    @regel2.setter
    def regel2(self, regel2: str):
        """Sets the regel2 of this VerblijfadresBuitenland.

        Het tweede deel van een buitenlands adres. Vaak is dit een combinatie van woonplaats eventueel in combinatie met de postcode.   # noqa: E501

        :param regel2: The regel2 of this VerblijfadresBuitenland.
        :type regel2: str
        """
        if regel2 is not None and len(regel2) > 50:
            raise ValueError("Invalid value for `regel2`, length must be less than or equal to `50`")  # noqa: E501

        self._regel2 = regel2

    @property
    def regel3(self) -> str:
        """Gets the regel3 of this VerblijfadresBuitenland.

        Het derde deel van een buitenlands adres is optioneel. Het gaat om een of meer geografische gebieden van het adres in het buitenland.   # noqa: E501

        :return: The regel3 of this VerblijfadresBuitenland.
        :rtype: str
        """
        return self._regel3

    @regel3.setter
    def regel3(self, regel3: str):
        """Sets the regel3 of this VerblijfadresBuitenland.

        Het derde deel van een buitenlands adres is optioneel. Het gaat om een of meer geografische gebieden van het adres in het buitenland.   # noqa: E501

        :param regel3: The regel3 of this VerblijfadresBuitenland.
        :type regel3: str
        """
        if regel3 is not None and len(regel3) > 35:
            raise ValueError("Invalid value for `regel3`, length must be less than or equal to `35`")  # noqa: E501

        self._regel3 = regel3

    @property
    def land(self) -> Waardetabel:
        """Gets the land of this VerblijfadresBuitenland.


        :return: The land of this VerblijfadresBuitenland.
        :rtype: Waardetabel
        """
        return self._land

    @land.setter
    def land(self, land: Waardetabel):
        """Sets the land of this VerblijfadresBuitenland.


        :param land: The land of this VerblijfadresBuitenland.
        :type land: Waardetabel
        """

        self._land = land

    @property
    def in_onderzoek(self) -> VerblijfadresBuitenlandInOnderzoek:
        """Gets the in_onderzoek of this VerblijfadresBuitenland.


        :return: The in_onderzoek of this VerblijfadresBuitenland.
        :rtype: VerblijfadresBuitenlandInOnderzoek
        """
        return self._in_onderzoek

    @in_onderzoek.setter
    def in_onderzoek(self, in_onderzoek: VerblijfadresBuitenlandInOnderzoek):
        """Sets the in_onderzoek of this VerblijfadresBuitenland.


        :param in_onderzoek: The in_onderzoek of this VerblijfadresBuitenland.
        :type in_onderzoek: VerblijfadresBuitenlandInOnderzoek
        """

        self._in_onderzoek = in_onderzoek
