from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.verblijfadres_binnenland_in_onderzoek import VerblijfadresBinnenlandInOnderzoek
from openapi_server.models.waardetabel import Waardetabel
import re
from openapi_server import util

from openapi_server.models.verblijfadres_binnenland_in_onderzoek import VerblijfadresBinnenlandInOnderzoek  # noqa: E501
from openapi_server.models.waardetabel import Waardetabel  # noqa: E501
import re  # noqa: E501

class VerblijfadresBinnenland(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, officiele_straatnaam=None, korte_straatnaam=None, huisnummer=None, huisletter=None, huisnummertoevoeging=None, aanduiding_bij_huisnummer=None, postcode=None, woonplaats=None, in_onderzoek=None):  # noqa: E501
        """VerblijfadresBinnenland - a model defined in OpenAPI

        :param officiele_straatnaam: The officiele_straatnaam of this VerblijfadresBinnenland.  # noqa: E501
        :type officiele_straatnaam: str
        :param korte_straatnaam: The korte_straatnaam of this VerblijfadresBinnenland.  # noqa: E501
        :type korte_straatnaam: str
        :param huisnummer: The huisnummer of this VerblijfadresBinnenland.  # noqa: E501
        :type huisnummer: int
        :param huisletter: The huisletter of this VerblijfadresBinnenland.  # noqa: E501
        :type huisletter: str
        :param huisnummertoevoeging: The huisnummertoevoeging of this VerblijfadresBinnenland.  # noqa: E501
        :type huisnummertoevoeging: str
        :param aanduiding_bij_huisnummer: The aanduiding_bij_huisnummer of this VerblijfadresBinnenland.  # noqa: E501
        :type aanduiding_bij_huisnummer: Waardetabel
        :param postcode: The postcode of this VerblijfadresBinnenland.  # noqa: E501
        :type postcode: str
        :param woonplaats: The woonplaats of this VerblijfadresBinnenland.  # noqa: E501
        :type woonplaats: str
        :param in_onderzoek: The in_onderzoek of this VerblijfadresBinnenland.  # noqa: E501
        :type in_onderzoek: VerblijfadresBinnenlandInOnderzoek
        """
        self.openapi_types = {
            'officiele_straatnaam': str,
            'korte_straatnaam': str,
            'huisnummer': int,
            'huisletter': str,
            'huisnummertoevoeging': str,
            'aanduiding_bij_huisnummer': Waardetabel,
            'postcode': str,
            'woonplaats': str,
            'in_onderzoek': VerblijfadresBinnenlandInOnderzoek
        }

        self.attribute_map = {
            'officiele_straatnaam': 'officieleStraatnaam',
            'korte_straatnaam': 'korteStraatnaam',
            'huisnummer': 'huisnummer',
            'huisletter': 'huisletter',
            'huisnummertoevoeging': 'huisnummertoevoeging',
            'aanduiding_bij_huisnummer': 'aanduidingBijHuisnummer',
            'postcode': 'postcode',
            'woonplaats': 'woonplaats',
            'in_onderzoek': 'inOnderzoek'
        }

        self._officiele_straatnaam = officiele_straatnaam
        self._korte_straatnaam = korte_straatnaam
        self._huisnummer = huisnummer
        self._huisletter = huisletter
        self._huisnummertoevoeging = huisnummertoevoeging
        self._aanduiding_bij_huisnummer = aanduiding_bij_huisnummer
        self._postcode = postcode
        self._woonplaats = woonplaats
        self._in_onderzoek = in_onderzoek

    @classmethod
    def from_dict(cls, dikt) -> 'VerblijfadresBinnenland':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The VerblijfadresBinnenland of this VerblijfadresBinnenland.  # noqa: E501
        :rtype: VerblijfadresBinnenland
        """
        return util.deserialize_model(dikt, cls)

    @property
    def officiele_straatnaam(self) -> str:
        """Gets the officiele_straatnaam of this VerblijfadresBinnenland.

        De officiële naam van een openbare ruimte uit de Basisregistratie Gebouwen en Adressen (BAG).   # noqa: E501

        :return: The officiele_straatnaam of this VerblijfadresBinnenland.
        :rtype: str
        """
        return self._officiele_straatnaam

    @officiele_straatnaam.setter
    def officiele_straatnaam(self, officiele_straatnaam: str):
        """Sets the officiele_straatnaam of this VerblijfadresBinnenland.

        De officiële naam van een openbare ruimte uit de Basisregistratie Gebouwen en Adressen (BAG).   # noqa: E501

        :param officiele_straatnaam: The officiele_straatnaam of this VerblijfadresBinnenland.
        :type officiele_straatnaam: str
        """
        if officiele_straatnaam is not None and len(officiele_straatnaam) > 80:
            raise ValueError("Invalid value for `officiele_straatnaam`, length must be less than or equal to `80`")  # noqa: E501

        self._officiele_straatnaam = officiele_straatnaam

    @property
    def korte_straatnaam(self) -> str:
        """Gets the korte_straatnaam of this VerblijfadresBinnenland.

        De officiële naam van een openbare ruimte uit de Basisregistratie Gebouwen en Adressen (BAG), zo nodig verkort tot maximaal 24 tekens, of de straatnaam van een niet-BAG adres.   # noqa: E501

        :return: The korte_straatnaam of this VerblijfadresBinnenland.
        :rtype: str
        """
        return self._korte_straatnaam

    @korte_straatnaam.setter
    def korte_straatnaam(self, korte_straatnaam: str):
        """Sets the korte_straatnaam of this VerblijfadresBinnenland.

        De officiële naam van een openbare ruimte uit de Basisregistratie Gebouwen en Adressen (BAG), zo nodig verkort tot maximaal 24 tekens, of de straatnaam van een niet-BAG adres.   # noqa: E501

        :param korte_straatnaam: The korte_straatnaam of this VerblijfadresBinnenland.
        :type korte_straatnaam: str
        """
        if korte_straatnaam is not None and len(korte_straatnaam) > 24:
            raise ValueError("Invalid value for `korte_straatnaam`, length must be less than or equal to `24`")  # noqa: E501

        self._korte_straatnaam = korte_straatnaam

    @property
    def huisnummer(self) -> int:
        """Gets the huisnummer of this VerblijfadresBinnenland.

        Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.   # noqa: E501

        :return: The huisnummer of this VerblijfadresBinnenland.
        :rtype: int
        """
        return self._huisnummer

    @huisnummer.setter
    def huisnummer(self, huisnummer: int):
        """Sets the huisnummer of this VerblijfadresBinnenland.

        Een nummer dat door de gemeente aan een adresseerbaar object is gegeven.   # noqa: E501

        :param huisnummer: The huisnummer of this VerblijfadresBinnenland.
        :type huisnummer: int
        """
        if huisnummer is not None and huisnummer > 99999:  # noqa: E501
            raise ValueError("Invalid value for `huisnummer`, must be a value less than or equal to `99999`")  # noqa: E501
        if huisnummer is not None and huisnummer < 1:  # noqa: E501
            raise ValueError("Invalid value for `huisnummer`, must be a value greater than or equal to `1`")  # noqa: E501

        self._huisnummer = huisnummer

    @property
    def huisletter(self) -> str:
        """Gets the huisletter of this VerblijfadresBinnenland.

        Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.   # noqa: E501

        :return: The huisletter of this VerblijfadresBinnenland.
        :rtype: str
        """
        return self._huisletter

    @huisletter.setter
    def huisletter(self, huisletter: str):
        """Sets the huisletter of this VerblijfadresBinnenland.

        Een toevoeging aan een huisnummer in de vorm van een letter die door de gemeente aan een adresseerbaar object is gegeven.   # noqa: E501

        :param huisletter: The huisletter of this VerblijfadresBinnenland.
        :type huisletter: str
        """
        if huisletter is not None and not re.search(r'^[a-zA-Z]{1}$', huisletter):  # noqa: E501
            raise ValueError(r"Invalid value for `huisletter`, must be a follow pattern or equal to `/^[a-zA-Z]{1}$/`")  # noqa: E501

        self._huisletter = huisletter

    @property
    def huisnummertoevoeging(self) -> str:
        """Gets the huisnummertoevoeging of this VerblijfadresBinnenland.

        Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.   # noqa: E501

        :return: The huisnummertoevoeging of this VerblijfadresBinnenland.
        :rtype: str
        """
        return self._huisnummertoevoeging

    @huisnummertoevoeging.setter
    def huisnummertoevoeging(self, huisnummertoevoeging: str):
        """Sets the huisnummertoevoeging of this VerblijfadresBinnenland.

        Een toevoeging aan een huisnummer of een combinatie van huisnummer en huisletter die door de gemeente aan een adresseerbaar object is gegeven.   # noqa: E501

        :param huisnummertoevoeging: The huisnummertoevoeging of this VerblijfadresBinnenland.
        :type huisnummertoevoeging: str
        """
        if huisnummertoevoeging is not None and not re.search(r'^[a-zA-Z0-9 \-]{1,4}$', huisnummertoevoeging):  # noqa: E501
            raise ValueError(r"Invalid value for `huisnummertoevoeging`, must be a follow pattern or equal to `/^[a-zA-Z0-9 \-]{1,4}$/`")  # noqa: E501

        self._huisnummertoevoeging = huisnummertoevoeging

    @property
    def aanduiding_bij_huisnummer(self) -> Waardetabel:
        """Gets the aanduiding_bij_huisnummer of this VerblijfadresBinnenland.


        :return: The aanduiding_bij_huisnummer of this VerblijfadresBinnenland.
        :rtype: Waardetabel
        """
        return self._aanduiding_bij_huisnummer

    @aanduiding_bij_huisnummer.setter
    def aanduiding_bij_huisnummer(self, aanduiding_bij_huisnummer: Waardetabel):
        """Sets the aanduiding_bij_huisnummer of this VerblijfadresBinnenland.


        :param aanduiding_bij_huisnummer: The aanduiding_bij_huisnummer of this VerblijfadresBinnenland.
        :type aanduiding_bij_huisnummer: Waardetabel
        """

        self._aanduiding_bij_huisnummer = aanduiding_bij_huisnummer

    @property
    def postcode(self) -> str:
        """Gets the postcode of this VerblijfadresBinnenland.

        De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.   # noqa: E501

        :return: The postcode of this VerblijfadresBinnenland.
        :rtype: str
        """
        return self._postcode

    @postcode.setter
    def postcode(self, postcode: str):
        """Sets the postcode of this VerblijfadresBinnenland.

        De door PostNL vastgestelde code die bij een bepaalde combinatie van een straatnaam en een huisnummer hoort.   # noqa: E501

        :param postcode: The postcode of this VerblijfadresBinnenland.
        :type postcode: str
        """
        if postcode is not None and not re.search(r'^[1-9]{1}[0-9]{3}[ ]?[A-Za-z]{2}$', postcode):  # noqa: E501
            raise ValueError(r"Invalid value for `postcode`, must be a follow pattern or equal to `/^[1-9]{1}[0-9]{3}[ ]?[A-Za-z]{2}$/`")  # noqa: E501

        self._postcode = postcode

    @property
    def woonplaats(self) -> str:
        """Gets the woonplaats of this VerblijfadresBinnenland.

        Een woonplaats is een gedeelte van het grondgebied van de gemeente met een naam.   # noqa: E501

        :return: The woonplaats of this VerblijfadresBinnenland.
        :rtype: str
        """
        return self._woonplaats

    @woonplaats.setter
    def woonplaats(self, woonplaats: str):
        """Sets the woonplaats of this VerblijfadresBinnenland.

        Een woonplaats is een gedeelte van het grondgebied van de gemeente met een naam.   # noqa: E501

        :param woonplaats: The woonplaats of this VerblijfadresBinnenland.
        :type woonplaats: str
        """
        if woonplaats is not None and not re.search(r'^[a-zA-Z0-9À-ž \(\)\,\.\-\']{1,80}$', woonplaats):  # noqa: E501
            raise ValueError(r"Invalid value for `woonplaats`, must be a follow pattern or equal to `/^[a-zA-Z0-9À-ž \(\)\,\.\-\']{1,80}$/`")  # noqa: E501

        self._woonplaats = woonplaats

    @property
    def in_onderzoek(self) -> VerblijfadresBinnenlandInOnderzoek:
        """Gets the in_onderzoek of this VerblijfadresBinnenland.


        :return: The in_onderzoek of this VerblijfadresBinnenland.
        :rtype: VerblijfadresBinnenlandInOnderzoek
        """
        return self._in_onderzoek

    @in_onderzoek.setter
    def in_onderzoek(self, in_onderzoek: VerblijfadresBinnenlandInOnderzoek):
        """Sets the in_onderzoek of this VerblijfadresBinnenland.


        :param in_onderzoek: The in_onderzoek of this VerblijfadresBinnenland.
        :type in_onderzoek: VerblijfadresBinnenlandInOnderzoek
        """

        self._in_onderzoek = in_onderzoek
