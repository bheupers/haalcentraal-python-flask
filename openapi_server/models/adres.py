from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.abstract_datum import AbstractDatum
from openapi_server.models.abstract_verblijfplaats import AbstractVerblijfplaats
from openapi_server.models.adres_all_of_datum_ingang_geldigheid import AdresAllOfDatumIngangGeldigheid
from openapi_server.models.adres_in_onderzoek import AdresInOnderzoek
from openapi_server.models.verblijfadres_binnenland import VerblijfadresBinnenland
from openapi_server.models.waardetabel import Waardetabel
import re
from openapi_server import util

from openapi_server.models.abstract_datum import AbstractDatum  # noqa: E501
from openapi_server.models.abstract_verblijfplaats import AbstractVerblijfplaats  # noqa: E501
from openapi_server.models.adres_all_of_datum_ingang_geldigheid import AdresAllOfDatumIngangGeldigheid  # noqa: E501
from openapi_server.models.adres_in_onderzoek import AdresInOnderzoek  # noqa: E501
from openapi_server.models.verblijfadres_binnenland import VerblijfadresBinnenland  # noqa: E501
from openapi_server.models.waardetabel import Waardetabel  # noqa: E501
import re  # noqa: E501

class Adres(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type=None, verblijfadres=None, functie_adres=None, adresseerbaar_object_identificatie=None, nummeraanduiding_identificatie=None, datum_van=None, datum_ingang_geldigheid=None, indicatie_vastgesteld_verblijft_niet_op_adres=None, in_onderzoek=None):  # noqa: E501
        """Adres - a model defined in OpenAPI

        :param type: The type of this Adres.  # noqa: E501
        :type type: str
        :param verblijfadres: The verblijfadres of this Adres.  # noqa: E501
        :type verblijfadres: VerblijfadresBinnenland
        :param functie_adres: The functie_adres of this Adres.  # noqa: E501
        :type functie_adres: Waardetabel
        :param adresseerbaar_object_identificatie: The adresseerbaar_object_identificatie of this Adres.  # noqa: E501
        :type adresseerbaar_object_identificatie: str
        :param nummeraanduiding_identificatie: The nummeraanduiding_identificatie of this Adres.  # noqa: E501
        :type nummeraanduiding_identificatie: str
        :param datum_van: The datum_van of this Adres.  # noqa: E501
        :type datum_van: AbstractDatum
        :param datum_ingang_geldigheid: The datum_ingang_geldigheid of this Adres.  # noqa: E501
        :type datum_ingang_geldigheid: AdresAllOfDatumIngangGeldigheid
        :param indicatie_vastgesteld_verblijft_niet_op_adres: The indicatie_vastgesteld_verblijft_niet_op_adres of this Adres.  # noqa: E501
        :type indicatie_vastgesteld_verblijft_niet_op_adres: bool
        :param in_onderzoek: The in_onderzoek of this Adres.  # noqa: E501
        :type in_onderzoek: AdresInOnderzoek
        """
        self.openapi_types = {
            'type': str,
            'verblijfadres': VerblijfadresBinnenland,
            'functie_adres': Waardetabel,
            'adresseerbaar_object_identificatie': str,
            'nummeraanduiding_identificatie': str,
            'datum_van': AbstractDatum,
            'datum_ingang_geldigheid': AdresAllOfDatumIngangGeldigheid,
            'indicatie_vastgesteld_verblijft_niet_op_adres': bool,
            'in_onderzoek': AdresInOnderzoek
        }

        self.attribute_map = {
            'type': 'type',
            'verblijfadres': 'verblijfadres',
            'functie_adres': 'functieAdres',
            'adresseerbaar_object_identificatie': 'adresseerbaarObjectIdentificatie',
            'nummeraanduiding_identificatie': 'nummeraanduidingIdentificatie',
            'datum_van': 'datumVan',
            'datum_ingang_geldigheid': 'datumIngangGeldigheid',
            'indicatie_vastgesteld_verblijft_niet_op_adres': 'indicatieVastgesteldVerblijftNietOpAdres',
            'in_onderzoek': 'inOnderzoek'
        }

        self._type = type
        self._verblijfadres = verblijfadres
        self._functie_adres = functie_adres
        self._adresseerbaar_object_identificatie = adresseerbaar_object_identificatie
        self._nummeraanduiding_identificatie = nummeraanduiding_identificatie
        self._datum_van = datum_van
        self._datum_ingang_geldigheid = datum_ingang_geldigheid
        self._indicatie_vastgesteld_verblijft_niet_op_adres = indicatie_vastgesteld_verblijft_niet_op_adres
        self._in_onderzoek = in_onderzoek

    @classmethod
    def from_dict(cls, dikt) -> 'Adres':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Adres of this Adres.  # noqa: E501
        :rtype: Adres
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this Adres.


        :return: The type of this Adres.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this Adres.


        :param type: The type of this Adres.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def verblijfadres(self) -> VerblijfadresBinnenland:
        """Gets the verblijfadres of this Adres.


        :return: The verblijfadres of this Adres.
        :rtype: VerblijfadresBinnenland
        """
        return self._verblijfadres

    @verblijfadres.setter
    def verblijfadres(self, verblijfadres: VerblijfadresBinnenland):
        """Sets the verblijfadres of this Adres.


        :param verblijfadres: The verblijfadres of this Adres.
        :type verblijfadres: VerblijfadresBinnenland
        """

        self._verblijfadres = verblijfadres

    @property
    def functie_adres(self) -> Waardetabel:
        """Gets the functie_adres of this Adres.


        :return: The functie_adres of this Adres.
        :rtype: Waardetabel
        """
        return self._functie_adres

    @functie_adres.setter
    def functie_adres(self, functie_adres: Waardetabel):
        """Sets the functie_adres of this Adres.


        :param functie_adres: The functie_adres of this Adres.
        :type functie_adres: Waardetabel
        """

        self._functie_adres = functie_adres

    @property
    def adresseerbaar_object_identificatie(self) -> str:
        """Gets the adresseerbaar_object_identificatie of this Adres.

        De verblijfplaats van de persoon kan een ligplaats, een standplaats of een verblijfsobject zijn.   # noqa: E501

        :return: The adresseerbaar_object_identificatie of this Adres.
        :rtype: str
        """
        return self._adresseerbaar_object_identificatie

    @adresseerbaar_object_identificatie.setter
    def adresseerbaar_object_identificatie(self, adresseerbaar_object_identificatie: str):
        """Sets the adresseerbaar_object_identificatie of this Adres.

        De verblijfplaats van de persoon kan een ligplaats, een standplaats of een verblijfsobject zijn.   # noqa: E501

        :param adresseerbaar_object_identificatie: The adresseerbaar_object_identificatie of this Adres.
        :type adresseerbaar_object_identificatie: str
        """
        if adresseerbaar_object_identificatie is not None and not re.search(r'^[0-9]{16}$', adresseerbaar_object_identificatie):  # noqa: E501
            raise ValueError(r"Invalid value for `adresseerbaar_object_identificatie`, must be a follow pattern or equal to `/^[0-9]{16}$/`")  # noqa: E501

        self._adresseerbaar_object_identificatie = adresseerbaar_object_identificatie

    @property
    def nummeraanduiding_identificatie(self) -> str:
        """Gets the nummeraanduiding_identificatie of this Adres.

        Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.   # noqa: E501

        :return: The nummeraanduiding_identificatie of this Adres.
        :rtype: str
        """
        return self._nummeraanduiding_identificatie

    @nummeraanduiding_identificatie.setter
    def nummeraanduiding_identificatie(self, nummeraanduiding_identificatie: str):
        """Sets the nummeraanduiding_identificatie of this Adres.

        Unieke identificatie van een nummeraanduiding (en het bijbehorende adres) in de BAG.   # noqa: E501

        :param nummeraanduiding_identificatie: The nummeraanduiding_identificatie of this Adres.
        :type nummeraanduiding_identificatie: str
        """
        if nummeraanduiding_identificatie is not None and not re.search(r'^[0-9]{16}$', nummeraanduiding_identificatie):  # noqa: E501
            raise ValueError(r"Invalid value for `nummeraanduiding_identificatie`, must be a follow pattern or equal to `/^[0-9]{16}$/`")  # noqa: E501

        self._nummeraanduiding_identificatie = nummeraanduiding_identificatie

    @property
    def datum_van(self) -> AbstractDatum:
        """Gets the datum_van of this Adres.


        :return: The datum_van of this Adres.
        :rtype: AbstractDatum
        """
        return self._datum_van

    @datum_van.setter
    def datum_van(self, datum_van: AbstractDatum):
        """Sets the datum_van of this Adres.


        :param datum_van: The datum_van of this Adres.
        :type datum_van: AbstractDatum
        """

        self._datum_van = datum_van

    @property
    def datum_ingang_geldigheid(self) -> AdresAllOfDatumIngangGeldigheid:
        """Gets the datum_ingang_geldigheid of this Adres.


        :return: The datum_ingang_geldigheid of this Adres.
        :rtype: AdresAllOfDatumIngangGeldigheid
        """
        return self._datum_ingang_geldigheid

    @datum_ingang_geldigheid.setter
    def datum_ingang_geldigheid(self, datum_ingang_geldigheid: AdresAllOfDatumIngangGeldigheid):
        """Sets the datum_ingang_geldigheid of this Adres.


        :param datum_ingang_geldigheid: The datum_ingang_geldigheid of this Adres.
        :type datum_ingang_geldigheid: AdresAllOfDatumIngangGeldigheid
        """

        self._datum_ingang_geldigheid = datum_ingang_geldigheid

    @property
    def indicatie_vastgesteld_verblijft_niet_op_adres(self) -> bool:
        """Gets the indicatie_vastgesteld_verblijft_niet_op_adres of this Adres.

        Geeft aan dat is vastgesteld dat de persoon niet meer op de geregistreerde adres/locatie staat ingeschreven.   # noqa: E501

        :return: The indicatie_vastgesteld_verblijft_niet_op_adres of this Adres.
        :rtype: bool
        """
        return self._indicatie_vastgesteld_verblijft_niet_op_adres

    @indicatie_vastgesteld_verblijft_niet_op_adres.setter
    def indicatie_vastgesteld_verblijft_niet_op_adres(self, indicatie_vastgesteld_verblijft_niet_op_adres: bool):
        """Sets the indicatie_vastgesteld_verblijft_niet_op_adres of this Adres.

        Geeft aan dat is vastgesteld dat de persoon niet meer op de geregistreerde adres/locatie staat ingeschreven.   # noqa: E501

        :param indicatie_vastgesteld_verblijft_niet_op_adres: The indicatie_vastgesteld_verblijft_niet_op_adres of this Adres.
        :type indicatie_vastgesteld_verblijft_niet_op_adres: bool
        """

        self._indicatie_vastgesteld_verblijft_niet_op_adres = indicatie_vastgesteld_verblijft_niet_op_adres

    @property
    def in_onderzoek(self) -> AdresInOnderzoek:
        """Gets the in_onderzoek of this Adres.


        :return: The in_onderzoek of this Adres.
        :rtype: AdresInOnderzoek
        """
        return self._in_onderzoek

    @in_onderzoek.setter
    def in_onderzoek(self, in_onderzoek: AdresInOnderzoek):
        """Sets the in_onderzoek of this Adres.


        :param in_onderzoek: The in_onderzoek of this Adres.
        :type in_onderzoek: AdresInOnderzoek
        """

        self._in_onderzoek = in_onderzoek
