from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.abstract_datum import AbstractDatum
from openapi_server.models.abstract_nationaliteit import AbstractNationaliteit
from openapi_server.models.nationaliteit_bekend_in_onderzoek import NationaliteitBekendInOnderzoek
from openapi_server.models.waardetabel import Waardetabel
from openapi_server import util

from openapi_server.models.abstract_datum import AbstractDatum  # noqa: E501
from openapi_server.models.abstract_nationaliteit import AbstractNationaliteit  # noqa: E501
from openapi_server.models.nationaliteit_bekend_in_onderzoek import NationaliteitBekendInOnderzoek  # noqa: E501
from openapi_server.models.waardetabel import Waardetabel  # noqa: E501

class NationaliteitBekend(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type=None, reden_opname=None, datum_ingang_geldigheid=None, nationaliteit=None, in_onderzoek=None):  # noqa: E501
        """NationaliteitBekend - a model defined in OpenAPI

        :param type: The type of this NationaliteitBekend.  # noqa: E501
        :type type: str
        :param reden_opname: The reden_opname of this NationaliteitBekend.  # noqa: E501
        :type reden_opname: Waardetabel
        :param datum_ingang_geldigheid: The datum_ingang_geldigheid of this NationaliteitBekend.  # noqa: E501
        :type datum_ingang_geldigheid: AbstractDatum
        :param nationaliteit: The nationaliteit of this NationaliteitBekend.  # noqa: E501
        :type nationaliteit: Waardetabel
        :param in_onderzoek: The in_onderzoek of this NationaliteitBekend.  # noqa: E501
        :type in_onderzoek: NationaliteitBekendInOnderzoek
        """
        self.openapi_types = {
            'type': str,
            'reden_opname': Waardetabel,
            'datum_ingang_geldigheid': AbstractDatum,
            'nationaliteit': Waardetabel,
            'in_onderzoek': NationaliteitBekendInOnderzoek
        }

        self.attribute_map = {
            'type': 'type',
            'reden_opname': 'redenOpname',
            'datum_ingang_geldigheid': 'datumIngangGeldigheid',
            'nationaliteit': 'nationaliteit',
            'in_onderzoek': 'inOnderzoek'
        }

        self._type = type
        self._reden_opname = reden_opname
        self._datum_ingang_geldigheid = datum_ingang_geldigheid
        self._nationaliteit = nationaliteit
        self._in_onderzoek = in_onderzoek

    @classmethod
    def from_dict(cls, dikt) -> 'NationaliteitBekend':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The NationaliteitBekend of this NationaliteitBekend.  # noqa: E501
        :rtype: NationaliteitBekend
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this NationaliteitBekend.


        :return: The type of this NationaliteitBekend.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this NationaliteitBekend.


        :param type: The type of this NationaliteitBekend.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def reden_opname(self) -> Waardetabel:
        """Gets the reden_opname of this NationaliteitBekend.


        :return: The reden_opname of this NationaliteitBekend.
        :rtype: Waardetabel
        """
        return self._reden_opname

    @reden_opname.setter
    def reden_opname(self, reden_opname: Waardetabel):
        """Sets the reden_opname of this NationaliteitBekend.


        :param reden_opname: The reden_opname of this NationaliteitBekend.
        :type reden_opname: Waardetabel
        """

        self._reden_opname = reden_opname

    @property
    def datum_ingang_geldigheid(self) -> AbstractDatum:
        """Gets the datum_ingang_geldigheid of this NationaliteitBekend.


        :return: The datum_ingang_geldigheid of this NationaliteitBekend.
        :rtype: AbstractDatum
        """
        return self._datum_ingang_geldigheid

    @datum_ingang_geldigheid.setter
    def datum_ingang_geldigheid(self, datum_ingang_geldigheid: AbstractDatum):
        """Sets the datum_ingang_geldigheid of this NationaliteitBekend.


        :param datum_ingang_geldigheid: The datum_ingang_geldigheid of this NationaliteitBekend.
        :type datum_ingang_geldigheid: AbstractDatum
        """

        self._datum_ingang_geldigheid = datum_ingang_geldigheid

    @property
    def nationaliteit(self) -> Waardetabel:
        """Gets the nationaliteit of this NationaliteitBekend.


        :return: The nationaliteit of this NationaliteitBekend.
        :rtype: Waardetabel
        """
        return self._nationaliteit

    @nationaliteit.setter
    def nationaliteit(self, nationaliteit: Waardetabel):
        """Sets the nationaliteit of this NationaliteitBekend.


        :param nationaliteit: The nationaliteit of this NationaliteitBekend.
        :type nationaliteit: Waardetabel
        """

        self._nationaliteit = nationaliteit

    @property
    def in_onderzoek(self) -> NationaliteitBekendInOnderzoek:
        """Gets the in_onderzoek of this NationaliteitBekend.


        :return: The in_onderzoek of this NationaliteitBekend.
        :rtype: NationaliteitBekendInOnderzoek
        """
        return self._in_onderzoek

    @in_onderzoek.setter
    def in_onderzoek(self, in_onderzoek: NationaliteitBekendInOnderzoek):
        """Sets the in_onderzoek of this NationaliteitBekend.


        :param in_onderzoek: The in_onderzoek of this NationaliteitBekend.
        :type in_onderzoek: NationaliteitBekendInOnderzoek
        """

        self._in_onderzoek = in_onderzoek
