from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.waardetabel import Waardetabel
import re
from openapi_server import util

from openapi_server.models.waardetabel import Waardetabel  # noqa: E501
import re  # noqa: E501

class RniDeelnemer(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, deelnemer=None, omschrijving_verdrag=None, categorie=None):  # noqa: E501
        """RniDeelnemer - a model defined in OpenAPI

        :param deelnemer: The deelnemer of this RniDeelnemer.  # noqa: E501
        :type deelnemer: Waardetabel
        :param omschrijving_verdrag: The omschrijving_verdrag of this RniDeelnemer.  # noqa: E501
        :type omschrijving_verdrag: str
        :param categorie: The categorie of this RniDeelnemer.  # noqa: E501
        :type categorie: str
        """
        self.openapi_types = {
            'deelnemer': Waardetabel,
            'omschrijving_verdrag': str,
            'categorie': str
        }

        self.attribute_map = {
            'deelnemer': 'deelnemer',
            'omschrijving_verdrag': 'omschrijvingVerdrag',
            'categorie': 'categorie'
        }

        self._deelnemer = deelnemer
        self._omschrijving_verdrag = omschrijving_verdrag
        self._categorie = categorie

    @classmethod
    def from_dict(cls, dikt) -> 'RniDeelnemer':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The RniDeelnemer of this RniDeelnemer.  # noqa: E501
        :rtype: RniDeelnemer
        """
        return util.deserialize_model(dikt, cls)

    @property
    def deelnemer(self) -> Waardetabel:
        """Gets the deelnemer of this RniDeelnemer.


        :return: The deelnemer of this RniDeelnemer.
        :rtype: Waardetabel
        """
        return self._deelnemer

    @deelnemer.setter
    def deelnemer(self, deelnemer: Waardetabel):
        """Sets the deelnemer of this RniDeelnemer.


        :param deelnemer: The deelnemer of this RniDeelnemer.
        :type deelnemer: Waardetabel
        """

        self._deelnemer = deelnemer

    @property
    def omschrijving_verdrag(self) -> str:
        """Gets the omschrijving_verdrag of this RniDeelnemer.

        Omschrijving van het verdrag op basis waarvan een zusterorganisatie in het buitenland de gegevens bij de RNI-deelnemer heeft aangeleverd.   # noqa: E501

        :return: The omschrijving_verdrag of this RniDeelnemer.
        :rtype: str
        """
        return self._omschrijving_verdrag

    @omschrijving_verdrag.setter
    def omschrijving_verdrag(self, omschrijving_verdrag: str):
        """Sets the omschrijving_verdrag of this RniDeelnemer.

        Omschrijving van het verdrag op basis waarvan een zusterorganisatie in het buitenland de gegevens bij de RNI-deelnemer heeft aangeleverd.   # noqa: E501

        :param omschrijving_verdrag: The omschrijving_verdrag of this RniDeelnemer.
        :type omschrijving_verdrag: str
        """
        if omschrijving_verdrag is not None and not re.search(r'^[a-zA-Z0-9À-ž \.\-\']{1,50}$', omschrijving_verdrag):  # noqa: E501
            raise ValueError(r"Invalid value for `omschrijving_verdrag`, must be a follow pattern or equal to `/^[a-zA-Z0-9À-ž \.\-\']{1,50}$/`")  # noqa: E501

        self._omschrijving_verdrag = omschrijving_verdrag

    @property
    def categorie(self) -> str:
        """Gets the categorie of this RniDeelnemer.

        Naam van categorie waarop de RNI-deelnemer gegevens heeft aangeleverd  # noqa: E501

        :return: The categorie of this RniDeelnemer.
        :rtype: str
        """
        return self._categorie

    @categorie.setter
    def categorie(self, categorie: str):
        """Sets the categorie of this RniDeelnemer.

        Naam van categorie waarop de RNI-deelnemer gegevens heeft aangeleverd  # noqa: E501

        :param categorie: The categorie of this RniDeelnemer.
        :type categorie: str
        """
        if categorie is not None and not re.search(r'^[a-zA-Z0-9À-ž \.\-\'\/]{1,40}$', categorie):  # noqa: E501
            raise ValueError(r"Invalid value for `categorie`, must be a follow pattern or equal to `/^[a-zA-Z0-9À-ž \.\-\'\/]{1,40}$/`")  # noqa: E501

        self._categorie = categorie
