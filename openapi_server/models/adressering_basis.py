from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.waardetabel import Waardetabel
from openapi_server import util

from openapi_server.models.waardetabel import Waardetabel  # noqa: E501

class AdresseringBasis(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, adresregel1=None, adresregel2=None, adresregel3=None, land=None, indicatie_vastgesteld_verblijft_niet_op_adres=None):  # noqa: E501
        """AdresseringBasis - a model defined in OpenAPI

        :param adresregel1: The adresregel1 of this AdresseringBasis.  # noqa: E501
        :type adresregel1: str
        :param adresregel2: The adresregel2 of this AdresseringBasis.  # noqa: E501
        :type adresregel2: str
        :param adresregel3: The adresregel3 of this AdresseringBasis.  # noqa: E501
        :type adresregel3: str
        :param land: The land of this AdresseringBasis.  # noqa: E501
        :type land: Waardetabel
        :param indicatie_vastgesteld_verblijft_niet_op_adres: The indicatie_vastgesteld_verblijft_niet_op_adres of this AdresseringBasis.  # noqa: E501
        :type indicatie_vastgesteld_verblijft_niet_op_adres: bool
        """
        self.openapi_types = {
            'adresregel1': str,
            'adresregel2': str,
            'adresregel3': str,
            'land': Waardetabel,
            'indicatie_vastgesteld_verblijft_niet_op_adres': bool
        }

        self.attribute_map = {
            'adresregel1': 'adresregel1',
            'adresregel2': 'adresregel2',
            'adresregel3': 'adresregel3',
            'land': 'land',
            'indicatie_vastgesteld_verblijft_niet_op_adres': 'indicatieVastgesteldVerblijftNietOpAdres'
        }

        self._adresregel1 = adresregel1
        self._adresregel2 = adresregel2
        self._adresregel3 = adresregel3
        self._land = land
        self._indicatie_vastgesteld_verblijft_niet_op_adres = indicatie_vastgesteld_verblijft_niet_op_adres

    @classmethod
    def from_dict(cls, dikt) -> 'AdresseringBasis':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The AdresseringBasis of this AdresseringBasis.  # noqa: E501
        :rtype: AdresseringBasis
        """
        return util.deserialize_model(dikt, cls)

    @property
    def adresregel1(self) -> str:
        """Gets the adresregel1 of this AdresseringBasis.

        Het eerste deel van een adres is een combinatie van de straat en huisnummer.   # noqa: E501

        :return: The adresregel1 of this AdresseringBasis.
        :rtype: str
        """
        return self._adresregel1

    @adresregel1.setter
    def adresregel1(self, adresregel1: str):
        """Sets the adresregel1 of this AdresseringBasis.

        Het eerste deel van een adres is een combinatie van de straat en huisnummer.   # noqa: E501

        :param adresregel1: The adresregel1 of this AdresseringBasis.
        :type adresregel1: str
        """
        if adresregel1 is not None and len(adresregel1) > 40:
            raise ValueError("Invalid value for `adresregel1`, length must be less than or equal to `40`")  # noqa: E501

        self._adresregel1 = adresregel1

    @property
    def adresregel2(self) -> str:
        """Gets the adresregel2 of this AdresseringBasis.

        Het tweede deel van een adres is een combinatie van woonplaats eventueel in combinatie met de postcode.   # noqa: E501

        :return: The adresregel2 of this AdresseringBasis.
        :rtype: str
        """
        return self._adresregel2

    @adresregel2.setter
    def adresregel2(self, adresregel2: str):
        """Sets the adresregel2 of this AdresseringBasis.

        Het tweede deel van een adres is een combinatie van woonplaats eventueel in combinatie met de postcode.   # noqa: E501

        :param adresregel2: The adresregel2 of this AdresseringBasis.
        :type adresregel2: str
        """
        if adresregel2 is not None and len(adresregel2) > 50:
            raise ValueError("Invalid value for `adresregel2`, length must be less than or equal to `50`")  # noqa: E501

        self._adresregel2 = adresregel2

    @property
    def adresregel3(self) -> str:
        """Gets the adresregel3 of this AdresseringBasis.

        Het derde deel van een adres is optioneel. Het gaat om een of meer geografische gebieden van het adres in het buitenland.   # noqa: E501

        :return: The adresregel3 of this AdresseringBasis.
        :rtype: str
        """
        return self._adresregel3

    @adresregel3.setter
    def adresregel3(self, adresregel3: str):
        """Sets the adresregel3 of this AdresseringBasis.

        Het derde deel van een adres is optioneel. Het gaat om een of meer geografische gebieden van het adres in het buitenland.   # noqa: E501

        :param adresregel3: The adresregel3 of this AdresseringBasis.
        :type adresregel3: str
        """
        if adresregel3 is not None and len(adresregel3) > 35:
            raise ValueError("Invalid value for `adresregel3`, length must be less than or equal to `35`")  # noqa: E501

        self._adresregel3 = adresregel3

    @property
    def land(self) -> Waardetabel:
        """Gets the land of this AdresseringBasis.


        :return: The land of this AdresseringBasis.
        :rtype: Waardetabel
        """
        return self._land

    @land.setter
    def land(self, land: Waardetabel):
        """Sets the land of this AdresseringBasis.


        :param land: The land of this AdresseringBasis.
        :type land: Waardetabel
        """

        self._land = land

    @property
    def indicatie_vastgesteld_verblijft_niet_op_adres(self) -> bool:
        """Gets the indicatie_vastgesteld_verblijft_niet_op_adres of this AdresseringBasis.

        Geeft aan dat is vastgesteld dat de persoon niet meer op de geregistreerde adres/locatie staat ingeschreven.   # noqa: E501

        :return: The indicatie_vastgesteld_verblijft_niet_op_adres of this AdresseringBasis.
        :rtype: bool
        """
        return self._indicatie_vastgesteld_verblijft_niet_op_adres

    @indicatie_vastgesteld_verblijft_niet_op_adres.setter
    def indicatie_vastgesteld_verblijft_niet_op_adres(self, indicatie_vastgesteld_verblijft_niet_op_adres: bool):
        """Sets the indicatie_vastgesteld_verblijft_niet_op_adres of this AdresseringBasis.

        Geeft aan dat is vastgesteld dat de persoon niet meer op de geregistreerde adres/locatie staat ingeschreven.   # noqa: E501

        :param indicatie_vastgesteld_verblijft_niet_op_adres: The indicatie_vastgesteld_verblijft_niet_op_adres of this AdresseringBasis.
        :type indicatie_vastgesteld_verblijft_niet_op_adres: bool
        """

        self._indicatie_vastgesteld_verblijft_niet_op_adres = indicatie_vastgesteld_verblijft_niet_op_adres
