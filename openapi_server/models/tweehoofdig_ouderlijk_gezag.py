from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.abstract_gezagsrelatie import AbstractGezagsrelatie
from openapi_server.models.gezag_ouder import GezagOuder
from openapi_server.models.minderjarige import Minderjarige
from openapi_server import util

from openapi_server.models.abstract_gezagsrelatie import AbstractGezagsrelatie  # noqa: E501
from openapi_server.models.gezag_ouder import GezagOuder  # noqa: E501
from openapi_server.models.minderjarige import Minderjarige  # noqa: E501

class TweehoofdigOuderlijkGezag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type=None, ouders=None, minderjarige=None):  # noqa: E501
        """TweehoofdigOuderlijkGezag - a model defined in OpenAPI

        :param type: The type of this TweehoofdigOuderlijkGezag.  # noqa: E501
        :type type: str
        :param ouders: The ouders of this TweehoofdigOuderlijkGezag.  # noqa: E501
        :type ouders: List[GezagOuder]
        :param minderjarige: The minderjarige of this TweehoofdigOuderlijkGezag.  # noqa: E501
        :type minderjarige: Minderjarige
        """
        self.openapi_types = {
            'type': str,
            'ouders': List[GezagOuder],
            'minderjarige': Minderjarige
        }

        self.attribute_map = {
            'type': 'type',
            'ouders': 'ouders',
            'minderjarige': 'minderjarige'
        }

        self._type = type
        self._ouders = ouders
        self._minderjarige = minderjarige

    @classmethod
    def from_dict(cls, dikt) -> 'TweehoofdigOuderlijkGezag':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The TweehoofdigOuderlijkGezag of this TweehoofdigOuderlijkGezag.  # noqa: E501
        :rtype: TweehoofdigOuderlijkGezag
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this TweehoofdigOuderlijkGezag.


        :return: The type of this TweehoofdigOuderlijkGezag.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this TweehoofdigOuderlijkGezag.


        :param type: The type of this TweehoofdigOuderlijkGezag.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def ouders(self) -> List[GezagOuder]:
        """Gets the ouders of this TweehoofdigOuderlijkGezag.


        :return: The ouders of this TweehoofdigOuderlijkGezag.
        :rtype: List[GezagOuder]
        """
        return self._ouders

    @ouders.setter
    def ouders(self, ouders: List[GezagOuder]):
        """Sets the ouders of this TweehoofdigOuderlijkGezag.


        :param ouders: The ouders of this TweehoofdigOuderlijkGezag.
        :type ouders: List[GezagOuder]
        """
        if ouders is not None and len(ouders) > 2:
            raise ValueError("Invalid value for `ouders`, number of items must be less than or equal to `2`")  # noqa: E501
        if ouders is not None and len(ouders) < 2:
            raise ValueError("Invalid value for `ouders`, number of items must be greater than or equal to `2`")  # noqa: E501

        self._ouders = ouders

    @property
    def minderjarige(self) -> Minderjarige:
        """Gets the minderjarige of this TweehoofdigOuderlijkGezag.


        :return: The minderjarige of this TweehoofdigOuderlijkGezag.
        :rtype: Minderjarige
        """
        return self._minderjarige

    @minderjarige.setter
    def minderjarige(self, minderjarige: Minderjarige):
        """Sets the minderjarige of this TweehoofdigOuderlijkGezag.


        :param minderjarige: The minderjarige of this TweehoofdigOuderlijkGezag.
        :type minderjarige: Minderjarige
        """

        self._minderjarige = minderjarige
