from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from openapi_server.models.base_model import Model
from openapi_server.models.abstract_gezagsrelatie import AbstractGezagsrelatie
from openapi_server.models.gezag_ouder import GezagOuder
from openapi_server.models.minderjarige import Minderjarige
from openapi_server import util

from openapi_server.models.abstract_gezagsrelatie import AbstractGezagsrelatie  # noqa: E501
from openapi_server.models.gezag_ouder import GezagOuder  # noqa: E501
from openapi_server.models.minderjarige import Minderjarige  # noqa: E501

class EenhoofdigOuderlijkGezag(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, type=None, ouder=None, minderjarige=None):  # noqa: E501
        """EenhoofdigOuderlijkGezag - a model defined in OpenAPI

        :param type: The type of this EenhoofdigOuderlijkGezag.  # noqa: E501
        :type type: str
        :param ouder: The ouder of this EenhoofdigOuderlijkGezag.  # noqa: E501
        :type ouder: GezagOuder
        :param minderjarige: The minderjarige of this EenhoofdigOuderlijkGezag.  # noqa: E501
        :type minderjarige: Minderjarige
        """
        self.openapi_types = {
            'type': str,
            'ouder': GezagOuder,
            'minderjarige': Minderjarige
        }

        self.attribute_map = {
            'type': 'type',
            'ouder': 'ouder',
            'minderjarige': 'minderjarige'
        }

        self._type = type
        self._ouder = ouder
        self._minderjarige = minderjarige

    @classmethod
    def from_dict(cls, dikt) -> 'EenhoofdigOuderlijkGezag':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The EenhoofdigOuderlijkGezag of this EenhoofdigOuderlijkGezag.  # noqa: E501
        :rtype: EenhoofdigOuderlijkGezag
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this EenhoofdigOuderlijkGezag.


        :return: The type of this EenhoofdigOuderlijkGezag.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this EenhoofdigOuderlijkGezag.


        :param type: The type of this EenhoofdigOuderlijkGezag.
        :type type: str
        """
        if type is None:
            raise ValueError("Invalid value for `type`, must not be `None`")  # noqa: E501

        self._type = type

    @property
    def ouder(self) -> GezagOuder:
        """Gets the ouder of this EenhoofdigOuderlijkGezag.


        :return: The ouder of this EenhoofdigOuderlijkGezag.
        :rtype: GezagOuder
        """
        return self._ouder

    @ouder.setter
    def ouder(self, ouder: GezagOuder):
        """Sets the ouder of this EenhoofdigOuderlijkGezag.


        :param ouder: The ouder of this EenhoofdigOuderlijkGezag.
        :type ouder: GezagOuder
        """

        self._ouder = ouder

    @property
    def minderjarige(self) -> Minderjarige:
        """Gets the minderjarige of this EenhoofdigOuderlijkGezag.


        :return: The minderjarige of this EenhoofdigOuderlijkGezag.
        :rtype: Minderjarige
        """
        return self._minderjarige

    @minderjarige.setter
    def minderjarige(self, minderjarige: Minderjarige):
        """Sets the minderjarige of this EenhoofdigOuderlijkGezag.


        :param minderjarige: The minderjarige of this EenhoofdigOuderlijkGezag.
        :type minderjarige: Minderjarige
        """

        self._minderjarige = minderjarige
